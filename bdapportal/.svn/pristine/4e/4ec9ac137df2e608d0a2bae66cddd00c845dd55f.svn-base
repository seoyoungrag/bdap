package com.kt.bdapportal.controller;

import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.kt.bdapportal.common.util.SearchVO;
import com.kt.bdapportal.domain.MgmtTblChkStat;
import com.kt.bdapportal.domain.MgmtTblStat;
import com.kt.bdapportal.service.MgmtTblChkStatService;
import com.kt.bdapportal.service.MgmtTblStatService;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

@Controller
public class DailyLoadStatusController {

	@Autowired
	private MgmtTblStatService mgmtTblStatService;
	
	@Autowired
	private MgmtTblChkStatService mgmgTblChkStatService;
	
	@RequestMapping("/dailyloadstatus.do")					 
	public ModelAndView dailyloadstatus(HttpServletRequest request, HttpServletResponse response) {
		
		ModelAndView mav = new ModelAndView("dailyloadstatus");
		
		try{
		
			request.setCharacterEncoding("UTF-8");
			
			String searchWord = (String)request.getParameter("schema");				//searchWord
			String startDate = (String)request.getParameter("startDate");				//searchWord
					
			SearchVO searchVO = new SearchVO();
			
			startDate = searchVO.nullTrim(startDate);
			searchWord = searchVO.nullTrim(searchWord);
			
			searchVO.setSearchWord(searchWord);										
			searchVO.setStartDate(startDate);
			
			mav.addObject("searchVO", searchVO);	
			
			List<MgmtTblStat> mgmtTblStatDbList = mgmtTblStatService.getMgmtTblDbList();
			mav.addObject("mgmtTblStatDbList", mgmtTblStatDbList);
			
			
		}catch(Exception e){
			e.printStackTrace();
		}
		
		
		return mav;
		
	}
	
	
	@RequestMapping("/dailyloadstatuslist.do")
	public void dailyloadstatuslist(HttpServletRequest request, HttpServletResponse response) {
		
		try{
			
			JSONObject jsonObj = new JSONObject();
			int page = Integer.parseInt((String)request.getParameter("page"));
			jsonObj.put("page", String.valueOf(page));
			int count = 0;
			int rows = Integer.parseInt((String)request.getParameter("rows"));
			
			String dbName = (String)request.getParameter("searchWord");
			String startDate = (String)request.getParameter("startDate");	
			
			List<MgmtTblStat> mgmtTblStatDbList = new ArrayList<MgmtTblStat>();
			SearchVO searchVO = new SearchVO();
			
			if(dbName == null || dbName.equals("")){															//dbId
				mgmtTblStatDbList = mgmtTblStatService.getMgmtTblDbList();
				if(!mgmtTblStatDbList.isEmpty()){
					dbName = mgmtTblStatDbList.get(0).getDbName();
				}
			}
			
			searchVO.setSearchWord(dbName);		
			searchVO.setStartDate(startDate);
			
			List<MgmtTblStat> mgmtTblStatList = new ArrayList<MgmtTblStat>();
			mgmtTblStatList = mgmtTblStatService.getMgmtTblDailyLoadStatusList(dbName,searchVO);							
			List<MgmtTblStat> mgmtTblMonthAvgList = new ArrayList<MgmtTblStat>();
			mgmtTblMonthAvgList = mgmtTblStatService.getMgmtTblMonthAvgLoadList(dbName,searchVO);
			
			JSONArray jsonArray = new JSONArray();
			
			for(int i = 0; i < mgmtTblStatList.size() ;i++){
				MgmtTblStat mgmtTblStat = mgmtTblStatList.get(i);
				MgmtTblStat mgmtTblMonthAvg = mgmtTblMonthAvgList.get(i);
				
				JSONObject jsonObj1 = new JSONObject();
				
				String tblNm = mgmtTblStat.getTblName();
				jsonObj1.put("tblNm", tblNm);
				jsonObj1.put("monthAvg", mgmtTblMonthAvg.getTblSize()/30);
				String[] loadSize = mgmtTblStat.getParamKey().split("\\,");																	
				jsonObj1.put("week", loadSize[0]);
				jsonObj1.put("yesterday", loadSize[1]);
				jsonObj1.put("today", loadSize[2]);
				
				float monthPercentage = (Float.valueOf(loadSize[2])-Float.valueOf(mgmtTblMonthAvg.getTblSize()/30))/Float.valueOf(mgmtTblMonthAvg.getTblSize()/30)*100;
				jsonObj1.put("monthPercentage", String.format("%.2f",monthPercentage));
			
				float weekPercentage = (Float.valueOf(loadSize[2])-Float.valueOf(loadSize[0]))/Float.valueOf(loadSize[0])*100;
				jsonObj1.put("weekPercentage", String.format("%.2f",weekPercentage));
				
				float dayPercentage = (Float.valueOf(loadSize[2])-Float.valueOf(loadSize[1]))/Float.valueOf(loadSize[1])*100;
				jsonObj1.put("dayPercentage", String.format("%.2f",dayPercentage));
				
				List<MgmtTblChkStat> mgmtTblChkStatList = mgmgTblChkStatService.getMgmtTblChkStatList(tblNm);
				String chk = "FINISH";
				String chkType = "null";
				for(int j = 0; j < mgmtTblChkStatList.size(); j++){
					MgmtTblChkStat mgmtTblChkStat = mgmtTblChkStatList.get(j);
					if(mgmtTblChkStat.getTblChkType().equals("TYPE")){						//type üũ
						chkType = "type";
					}
					if(mgmtTblChkStat.getQryResult().contains("FAIL")){
						chk = "FAILED";
						break;								
					}
				}
				if(chkType.equals("null")){
					jsonObj1.put("chkNull", chk);
					jsonObj1.put("chkType", "");
				}else{
					jsonObj1.put("chkNull", "");
					jsonObj1.put("chkType", chk);
				}
				
				jsonArray.add(jsonObj1);
			}
			
			jsonObj.put("rows", jsonArray);
			
			PrintWriter pw = response.getWriter();
			pw.print(jsonObj);
			pw.flush();
			pw.close();
			
		}catch(Exception e){
			e.printStackTrace();
		}

	}
	
	
	
	
}
