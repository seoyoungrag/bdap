package com.kt.bdapportal.controller;

import java.io.PrintWriter;
import java.net.URLEncoder;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Calendar;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.kt.bdapportal.domain.BdapComment;
import com.kt.bdapportal.service.CommentService;

import net.sf.json.JSONObject;

@Controller
public class BbsCommentController {

	
	@Autowired
	private CommentService commentService;
	
	
	
	
	@RequestMapping("/commentReg.do")				
	public void commentReg(HttpServletRequest request, HttpServletResponse response){
		
		try{
			
			HttpSession session = request.getSession();
			String userId = (String)session.getAttribute("USER_ID");
			request.setCharacterEncoding("UTF-8");
			
			String comment = (String)request.getParameter("comment");				//댓글 내용
			String bbsPostId = (String)request.getParameter("bbsPostId");			//부모 게시글 아이디
			
			BdapComment bdapComment = new BdapComment();
	
			SimpleDateFormat formatter = new SimpleDateFormat ("yyyy-MM-dd hh:mm:ss");
			Calendar cal = Calendar.getInstance();
			String today = "";
			today = formatter.format(cal.getTime());
			Timestamp ts = Timestamp.valueOf(today);
			
			bdapComment.setCmtParentBbsId(bbsPostId);
			bdapComment.setCmtContent(comment);
			bdapComment.setCmtRegDt(ts);
			bdapComment.setCmtDeletedYn('N');
			bdapComment.setCmtWriterId(userId);
			bdapComment.setCmtWriterEmail("abc@kt.com");
			bdapComment.setCmtWriterNm("관리자");
			
			bdapComment = commentService.commentInsert(bdapComment);
			long cmtCount = commentService.countByCmtParentBbsId(bbsPostId);
			
			JSONObject jsonObj = new JSONObject();
			jsonObj.put("commentContent", comment);
			jsonObj.put("cmtCount", cmtCount);
			jsonObj.put("commentId", bdapComment.getCmtId());
			jsonObj.put("commentWriterId", bdapComment.getCmtWriterId());
			jsonObj.put("commentRegDt", bdapComment.getCmtRegDt());
			
			response.setCharacterEncoding("UTF-8");
			PrintWriter pw = response.getWriter();
			pw.print(jsonObj);
			pw.flush();
			pw.close();
			
		}catch(Exception e){
			e.printStackTrace();	
		}finally{
			
		}
	
	}
	
	@RequestMapping("/commentUpdate.do")				
	public void commentUpdate(HttpServletRequest request, HttpServletResponse response){
		
		try{
			
			HttpSession session = request.getSession();
			String userId = (String)session.getAttribute("USER_ID");
			request.setCharacterEncoding("UTF-8");
			
			String commentContent = (String)request.getParameter("commentContent");				//댓글 내용
			String bbsPostId = (String)request.getParameter("bbsPostId");			//부모 게시글 아이디
			String commentId = (String)request.getParameter("commentId");			//부모 게시글 아이디			
			
			BdapComment bdapComment = new BdapComment();
	
			SimpleDateFormat formatter = new SimpleDateFormat ("yyyy-MM-dd hh:mm:ss");
			Calendar cal = Calendar.getInstance();
			String today = "";
			today = formatter.format(cal.getTime());
			Timestamp ts = Timestamp.valueOf(today);
			
			bdapComment.setCmtId(commentId);
			bdapComment.setCmtParentBbsId(bbsPostId);
			bdapComment.setCmtContent(commentContent);
			bdapComment.setCmtRegDt(ts);
			bdapComment.setCmtDeletedYn('N');
			bdapComment.setCmtWriterId(userId);
			bdapComment.setCmtWriterEmail("abc@kt.com");
			bdapComment.setCmtWriterNm("관리자");
			
			commentService.commentInsert(bdapComment);
		
			
			JSONObject jsonObj = new JSONObject();
			jsonObj.put("commentContent", commentContent);
			jsonObj.put("commentId", commentId);
			response.setCharacterEncoding("UTF-8");
			PrintWriter pw = response.getWriter();
			pw.print(jsonObj);
			pw.flush();
			pw.close();
			
			
		}catch(Exception e){
			e.printStackTrace();	
		}finally{
			
		}
	
	
	}
	
	@RequestMapping("/commentDelete.do")				
	public void commentDelete(HttpServletRequest request, HttpServletResponse response){
		
		try{
			
			HttpSession session = request.getSession();
			String userId = (String)session.getAttribute("USER_ID");
			request.setCharacterEncoding("UTF-8");
			
			String commentId = (String)request.getParameter("commentId");			//부모 게시글 아이디
			String bbsPostId = (String)request.getParameter("bbsPostId");
			
			BdapComment bdapComment = new BdapComment();
			bdapComment.setCmtId(commentId);
			commentService.commentDelete(bdapComment);
			
			long cmtCount = commentService.countByCmtParentBbsId(bbsPostId);
			
			JSONObject jsonObj = new JSONObject();
			jsonObj.put("commentId", commentId);
			jsonObj.put("cmtCount", cmtCount);
			response.setCharacterEncoding("UTF-8");
			PrintWriter pw = response.getWriter();
			pw.print(jsonObj);
			pw.flush();
			pw.close();
			
			
		}catch(Exception e){
			e.printStackTrace();	
		}finally{
			
		}
	
	
	}
	
	
	
	
	
	
	
	
	
	
	
}
